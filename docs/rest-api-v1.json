{
  "openapi": "3.0.3",
  "info": {
    "title": "CozyCave.ch Server REST API",
    "description": "This is the REST API documentation for the cozycave.ch server.",
    "version": "1.1.0"
  },
  "tags": [
    {
      "name": "authentication",
      "description": "handles the authentication part of the api"
    },
    {
      "name": "users",
      "description": "everything about the user"
    },
    {
      "name": "listings",
      "description": "listings and their applications"
    },
    {
      "name": "applications",
      "description": "a list including all application endpoints"
    },
    {
      "name": "pictures",
      "description": "pictures of users and listings"
    }
  ],
  "paths": {
    "/login/": {
      "put": {
        "summary": "login endpoint for a user",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password_hashed": {
                    "type": "string",
                    "description": "SHA3-512 is used for hashing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/UnknownLoginDataError"
          },
          "200": {
            "description": "send when logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "authentication"
        ]
      }
    },
    "/register/": {
      "post": {
        "summary": "registered a new user in the system",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstname": {
                    "type": "string",
                    "required": true
                  },
                  "lastname": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password_hashed": {
                    "type": "string",
                    "required": "true"
                  },
                  "address": {
                    "$ref": "#/components/schemas/Address"
                  },
                  "gender": {
                    "$ref": "#/components/schemas/Gender"
                  },
                  "details": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "409": {
            "$ref": "#/components/responses/UserAlreadyExistsError"
          },
          "201": {
            "description": "send when registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "authentication"
        ]
      }
    },
    "/logout/": {
      "put": {
        "summary": "logs out an user",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          }
        },
        "tags": [
          "authentication"
        ]
      }
    },
    "/users/": {
      "get": {
        "summary": "returns a full list of all users",
        "operationId": "getUsers",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "email",
            "description": "shows only users with the provided email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "200": {
            "description": "send the request was executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "summary": "creates a new user",
        "operationId": "createUser",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "201": {
            "$ref": "#/components/responses/User"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "returns a user",
        "operationId": "getUser",
        "description": "students and landlords can only access their own profile",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/User"
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "summary": "changes a user",
        "operationId": "changeUser",
        "description": "students and landlords can only access their own profile",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/User"
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "summary": "deletes a user",
        "operationId": "deleteUser",
        "description": "team member accounts can only be deleted by admins",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when the request was executed successfully"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/applications/": {
      "get": {
        "summary": "list all applications of a user",
        "operationId": "getApplicationsOfUser",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "send when the request was executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users",
          "applications"
        ]
      }
    },
    "/users/{userId}/applications/{applicationId}": {
      "get": {
        "summary": "get an application of a user",
        "operationId": "getApplicationOfUser",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Application"
          }
        },
        "tags": [
          "users",
          "applications"
        ]
      },
      "put": {
        "summary": "change an application of a user",
        "operationId": "changeApplicationOfUser",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {

          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Application"
          }
        },
        "tags": [
          "users",
          "applications"
        ]
      },
      "delete": {
        "summary": "delete an application of a user",
        "operationId": "deleteApplicationOfUser",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when the request was executed successfully"
          }
        },
        "tags": [
          "users",
          "applications"
        ]
      }
    },
    "/listings/": {
      "get": {
        "summary": "returns all listings",
        "operationId": "getListings",
        "parameters": [
          {
            "name": "gender-of-inhabitants",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Gender"
              }
            }
          },
          {
            "name": "gender-of-searched-inhabitants",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Gender"
              }
            }
          },
          {
            "name": "price",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sqm_total",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sqm_room",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "NAME_ASC",
                "NAME_DESC",
                "PRICE_ASC",
                "PRICE_DESC",
                "SQM_TOTAL_ASC",
                "SQM_TOTAL_DESC",
                "SQM_ROOM_ASC",
                "SQM_ROOM_DESC",
                "TOTAL_ROOMS_ASC",
                "TOTAL_ROOMS_DESC",
                "NUMBER_OF_INHABITANTS_ASC",
                "NUMBER_OF_INHABITANTS_DESC"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "200": {
            "description": "send when the request was executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Listing"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "listings"
        ]
      },
      "post": {
        "summary": "creates a new listing",
        "operationId": "createListing",
        "security": [
          {
            "bearerAuth": [
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Listing"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "201": {
            "$ref": "#/components/responses/Listing"
          }
        },
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{listingId}": {
      "get": {
        "summary": "gets a listing",
        "operationId": "getListing",
        "parameters": [
          {
            "$ref": "#/components/parameters/ListingID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Listing"
          }
        },
        "tags": [
          "listings"
        ]
      },
      "put": {
        "summary": "changes a listing",
        "operationId": "changeListing",
        "security": [
          {
            "bearerAuth": [
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ListingID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Listing"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Listing"
          }
        },
        "tags": [
          "listings"
        ]
      },
      "delete": {
        "summary": "deletes a listing and all its subcomponents",
        "operationId": "deleteListing",
        "security": [
          {
            "bearerAuth": [
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ListingID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{listingId}/applications/": {
      "get": {
        "summary": "returns all applications on a specific listing",
        "operationId": "getListingApplications",
        "security": [
          {
            "bearerAuth": [
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ListingID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "listings",
          "applications"
        ]
      },
      "post": {
        "summary": "creates a new application to a listing",
        "operationId": "createListingApplication",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Application"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "201": {
            "$ref": "#/components/responses/Application"
          }
        },
        "tags": [
          "listings",
          "applications"
        ]
      }
    },
    "/listings/{listingId}/applications/{applicationId}": {
      "get": {
        "summary": "returns a listings application",
        "operationId": "getListingApplication",
        "description": "students can only access their own application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ListingID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Application"
          }
        },
        "tags": [
          "listings",
          "applications"
        ]
      },
      "put": {
        "summary": "changes a listings application",
        "operationId": "changeListingApplication",
        "security": [
          {
            "bearerAuth": [
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Application"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Application"
          }
        },
        "tags": [
          "listings",
          "applications"
        ]
      },
      "delete": {
        "summary": "deletes a listings application",
        "operationId": "deleteListingApplication",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "listings",
          "applications"
        ]
      }
    },
    "/pictures/": {
      "get": {
        "summary": "gets all pictures",
        "operationId": "getPictures",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "200": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Picture"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "pictures"
        ]
      },
      "post": {
        "summary": "upload of a new picture",
        "operationId": "uploadPicture",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "image/jpeg": {},
            "image/png": {}
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "201": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "pictures"
        ]
      }
    },
    "/pictures/{pictureId}": {
      "get": {
        "summary": "returns a single pictures information",
        "operationId": "getPictureInformation",
        "parameters": [
          {
            "$ref": "#/components/parameters/PictureID"
          }
        ],
        "responses": {
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Picture"
          }
        },
        "tags": [
          "pictures"
        ]
      },
      "delete": {
        "summary": "deletes a picture",
        "operationId": "delete picture",
        "description": "only the owner, team and admins can delete a picture",
        "security": [
          {
            "bearerAuth": [
              "student",
              "landlord",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PictureID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "pictures"
        ]
      }
    },
    "/pictures/{pictureId}/view": {
      "get": {
        "summary": "vews a picture",
        "operationId": "getPicture",
        "parameters": [
          {
            "$ref": "#/components/parameters/PictureID"
          }
        ],
        "responses": {
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "picture",
            "content": {
              "image/jpeg": {}
            }
          }
        },
        "tags": [
          "pictures"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://sopra-fs22-group-15-server.herokuapp.com/v1/"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hashed": {
            "type": "string",
            "writeOnly": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "token": {
            "$ref": "#/components/schemas/Token"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "details": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "listing": {
            "$ref": "#/components/schemas/Listing"
          },
          "status": {
            "$ref": "#/components/schemas/ApplicationStatus"
          },
          "linkedGroupApplication": {
            "$ref": "#/components/schemas/GroupApplication"
          }
        }
      },
      "GroupApplication": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "listing": {
            "$ref": "#/components/schemas/Listing"
          },
          "status": {
            "$ref": "#/components/schemas/ApplicationStatus"
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "agreedMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "published": {
            "type": "boolean"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            }
          },
          "sqm": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ListingType"
          },
          "furnished": {
            "type": "boolean"
          },
          "availableTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gender"
            }
          },
          "available": {
            "type": "boolean"
          },
          "rent": {
            "type": "integer"
          },
          "deposit": {
            "type": "integer"
          }
        }
      },
      "ListingType": {
        "type": "string",
        "enum": [
          "FLAT",
          "ROOM"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "street": {
            "type": "string"
          },
          "street_number": {
            "type": "string"
          },
          "zip_code": {
            "type": "integer"
          },
          "village": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Picture": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Gender": {
        "type": "string",
        "enum": [
          "female",
          "male",
          "other"
        ]
      },
      "ApplicationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "approved",
          "denied"
        ]
      },
      "UUID": {
        "type": "string"
      },
      "Date": {
        "type": "string"
      },
      "Role": {
        "type": "string",
        "enum": [
          "student",
          "landlord",
          "team",
          "admin"
        ]
      },
      "Token": {
        "type": "string",
        "description": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "bearer token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 401,
                "description": "bearer token is missing or invalid"
              }
            }
          }
        }
      },
      "NoPermissionsError": {
        "description": "no permission granted using this account",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 403,
                "description": "no permission granted using this account"
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "send when a bad request was send to the server",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 400,
                "description": "the request was not properly formatted"
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "send when a parameters corresponding object was not found",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 404,
                "description": "not found"
              }
            }
          }
        }
      },
      "User": {
        "description": "full user",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "description": "full listing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Listing"
            }
          }
        }
      },
      "Application": {
        "description": "full application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "Group": {
        "description": "full group",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "GroupApplication": {
        "description": "full group application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      },
      "Picture": {
        "description": "full picture",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Picture"
            }
          }
        }
      },
      "UnknownLoginDataError": {},
      "UserAlreadyExistsError": {}
    },
    "requestBodies": {
      "User": {
        "description": "full user for team usage",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "description": "listing for inserting and editing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Listing"
            }
          }
        }
      },
      "Application": {
        "description": "application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "Group": {
        "description": "groups",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "GroupApplication": {
        "description": "group application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      }
    },
    "parameters": {
      "UserID": {
        "name": "userId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "GroupID": {
        "name": "groupId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "ApplicationID": {
        "name": "applicationId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "GroupApplicationID": {
        "name": "groupApplicationId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "ListingID": {
        "name": "listingId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "AddressID": {
        "name": "addressId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "PictureID": {
        "name": "pictureId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      }
    },
    "securitySchemes": {
      "user_bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
