{
  "openapi": "3.0.3",
  "info": {
    "title": "CozyCave.ch Server REST API (group calls only)",
    "description": "This is the REST API documentation (group calls only) for the cozycave.ch server.",
    "version": "1.1.0"
  },
  "tags": [
    {
      "name": "groups",
      "description": "groups, members and their applications"
    },
    {
      "name": "applications",
      "description": "a list including all application endpoints"
    }
  ],
  "paths": {
    "/groups/": {
      "get": {
        "summary": "gets all groups",
        "operationId": "getGroups",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "200": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "groups"
        ]
      },
      "post": {
        "summary": "creates a new group",
        "operationId": "createGroup",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Group"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "201": {
            "$ref": "#/components/responses/Group"
          }
        },
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{groupId}": {
      "get": {
        "summary": "gets a single group",
        "operationId": "getGroup",
        "description": "students can only access their own group",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Group"
          }
        },
        "tags": [
          "groups"
        ]
      },
      "put": {
        "summary": "changes a group",
        "operationId": "changeGroup",
        "description": "students can only access their own group",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Group"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/Group"
          }
        },
        "tags": [
          "groups"
        ]
      },
      "delete": {
        "summary": "deletes a group",
        "operationId": "deleteGroup",
        "security": [
          {
            "bearerAuth": [
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{groupId}/members": {
      "get": {
        "summary": "gets all members of the group",
        "operationId": "getGroupMembers",
        "description": "students can only access their own group",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "groups"
        ]
      },
      "post": {
        "summary": "adds a group member",
        "operationId": "addGroupMember",
        "description": "students can only access their own group",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{groupId}/members/{userId}": {
      "delete": {
        "summary": "gets information about a group member",
        "operationId": "getGroupMember",
        "description": "students can only access their own group membership",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          },
          {
            "$ref": "#/components/parameters/UserID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{groupId}/applications/": {
      "get": {
        "summary": "gets the applications from a specific group",
        "operationId": "getGroupApplication",
        "description": "students can only access their own groups' application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "send when executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupApplication"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "groups",
          "applications"
        ]
      },
      "post": {
        "summary": "creates a new group application",
        "operationId": "createGroupApplication",
        "description": "students can only access their own groups' application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GroupApplication"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "201": {
            "$ref": "#/components/responses/GroupApplication"
          }
        },
        "tags": [
          "groups",
          "applications"
        ]
      }
    },
    "/groups/{groupId}/applications/{applicationId}": {
      "get": {
        "summary": "gets a single group application",
        "operationId": "getGroupApplication",
        "description": "students can only access their own groups' application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "$ref": "#/components/responses/GroupApplication"
          }
        },
        "tags": [
          "groups",
          "applications"
        ]
      },
      "put": {
        "summary": "changes a group application",
        "operationId": "changeGroupApplication",
        "description": "students can only access their own groups' application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GroupApplication"
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "200": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "groups",
          "applications"
        ]
      },
      "delete": {
        "summary": "deletes a group application",
        "operationId": "deleteGroupApplication",
        "description": "students can only access their own groups' application",
        "security": [
          {
            "bearerAuth": [
              "student",
              "team",
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/GroupID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionsError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "204": {
            "description": "send when executed successfully"
          }
        },
        "tags": [
          "groups",
          "applications"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://sopra-fs22-group-15-server.herokuapp.com/v1/"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hashed": {
            "type": "string",
            "writeOnly": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "token": {
            "$ref": "#/components/schemas/Token"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "details": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "listing": {
            "$ref": "#/components/schemas/Listing"
          },
          "status": {
            "$ref": "#/components/schemas/ApplicationStatus"
          },
          "linkedGroupApplication": {
            "$ref": "#/components/schemas/GroupApplication"
          }
        }
      },
      "GroupApplication": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "listing": {
            "$ref": "#/components/schemas/Listing"
          },
          "status": {
            "$ref": "#/components/schemas/ApplicationStatus"
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "agreedMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "published": {
            "type": "boolean"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            }
          },
          "sqm": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ListingType"
          },
          "furnished": {
            "type": "boolean"
          },
          "availableTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gender"
            }
          },
          "available": {
            "type": "boolean"
          },
          "rent": {
            "type": "integer"
          },
          "deposit": {
            "type": "integer"
          }
        }
      },
      "ListingType": {
        "type": "string",
        "enum": [
          "FLAT",
          "ROOM"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "street": {
            "type": "string"
          },
          "street_number": {
            "type": "string"
          },
          "zip_code": {
            "type": "integer"
          },
          "village": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Picture": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/Date"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Gender": {
        "type": "string",
        "enum": [
          "female",
          "male",
          "other"
        ]
      },
      "ApplicationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "approved",
          "denied"
        ]
      },
      "UUID": {
        "type": "string"
      },
      "Date": {
        "type": "string"
      },
      "Role": {
        "type": "string",
        "enum": [
          "student",
          "landlord",
          "team",
          "admin"
        ]
      },
      "Token": {
        "type": "string",
        "description": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "bearer token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 401,
                "description": "bearer token is missing or invalid"
              }
            }
          }
        }
      },
      "NoPermissionsError": {
        "description": "no permission granted using this account",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 403,
                "description": "no permission granted using this account"
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "send when a bad request was send to the server",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 400,
                "description": "the request was not properly formatted"
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "send when a parameters corresponding object was not found",
        "content": {
          "application/json": {
            "schema": {
              "default": {
                "error_code": 404,
                "description": "not found"
              }
            }
          }
        }
      },
      "User": {
        "description": "full user",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "description": "full listing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Listing"
            }
          }
        }
      },
      "Application": {
        "description": "full application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "Group": {
        "description": "full group",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "GroupApplication": {
        "description": "full group application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      },
      "Picture": {
        "description": "full picture",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Picture"
            }
          }
        }
      },
      "UnknownLoginDataError": {},
      "UserAlreadyExistsError": {}
    },
    "requestBodies": {
      "User": {
        "description": "full user for team usage",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Listing": {
        "description": "listing for inserting and editing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Listing"
            }
          }
        }
      },
      "Application": {
        "description": "application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "Group": {
        "description": "groups",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "GroupApplication": {
        "description": "group application",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GroupApplication"
            }
          }
        }
      }
    },
    "parameters": {
      "UserID": {
        "name": "userId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "GroupID": {
        "name": "groupId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "ApplicationID": {
        "name": "applicationId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "GroupApplicationID": {
        "name": "groupApplicationId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "ListingID": {
        "name": "listingId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "AddressID": {
        "name": "addressId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "PictureID": {
        "name": "pictureId",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      }
    },
    "securitySchemes": {
      "user_bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}